import type { StateDefining, DB } from './db';
import { MutableDB } from './mutable_db';
declare type QueryDescriptor<State extends StateDefining, Value> = (db: DB<State>) => Value;
export declare class Subscription<State extends StateDefining, Value> {
    private readonly db;
    private _query;
    private _current;
    private unsubscribe;
    private subscribers;
    constructor(db: MutableDB<State>, query: QueryDescriptor<State, Value>);
    get query(): QueryDescriptor<State, Value>;
    set query(query: QueryDescriptor<State, Value>);
    get current(): Value;
    subscribe(callback: (value: Value) => void): () => void;
    cancel(): void;
    private trigger;
}
export {};
